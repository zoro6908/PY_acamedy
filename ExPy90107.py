# ExPy9xxxx 파이썬 개인 연습
# pandas
# https://dandyrilla.github.io/2017-08-12/pandas-10min/
# https://pandas.pydata.org/docs/user_guide/basics.html

# 6. 합치기 (Merging)

import pandas as pd
import numpy as np

# 같은 형태의 자료들을 이어 하나로 만들어주는 concat, 데이터프레임을 말그대로 물리적으로 이어 붙여주는 함수
df = pd.DataFrame(np.random.randn(10, 4))
# print(df)
# #           0         1         2         3
# # 0  0.898980  1.959647 -0.247225 -1.934860
# # 1  1.971013 -1.636018  1.380207 -0.053481
# # 2 -1.642212  1.488914  1.404216  0.148393
# # 3  1.001299  0.928681  0.217891 -0.561711
# # 4 -0.756373 -1.030464 -1.955527  0.692296
# # 5  0.211606  1.411635  0.112028  0.336284
# # 6  0.543794  1.817184 -1.208864 -0.794958
# # 7  1.147472 -0.419628 -0.756718 -0.727194
# # 8 -0.727263 -0.392680  1.709520  1.223596
# # 9 -0.832054 -0.982381 -0.216977 -1.135608
#
# pcs1 = df[:3]
# #           0         1         2         3
# # 0  0.898980  1.959647 -0.247225 -1.934860
# # 1  1.971013 -1.636018  1.380207 -0.053481
# # 2 -1.642212  1.488914  1.404216  0.148393
#
# pcs2 = df[3:7]
# #           0         1         2         3
# # 3  1.001299  0.928681  0.217891 -0.561711
# # 4 -0.756373 -1.030464 -1.955527  0.692296
# # 5  0.211606  1.411635  0.112028  0.336284
# # 6  0.543794  1.817184 -1.208864 -0.794958
#
# pcs3 = df[7:]
# #           0         1         2         3
# # 7  1.147472 -0.419628 -0.756718 -0.727194
# # 8 -0.727263 -0.392680  1.709520  1.223596
# # 9 -0.832054 -0.982381 -0.216977 -1.135608
#
# print(pcs1); print(pcs2); print(pcs3)
#
# print(pd.concat([pcs1, pcs2, pcs3]))
# #           0         1         2         3
# # 0  0.898980  1.959647 -0.247225 -1.934860
# # 1  1.971013 -1.636018  1.380207 -0.053481
# # 2 -1.642212  1.488914  1.404216  0.148393
# # 3  1.001299  0.928681  0.217891 -0.561711
# # 4 -0.756373 -1.030464 -1.955527  0.692296
# # 5  0.211606  1.411635  0.112028  0.336284
# # 6  0.543794  1.817184 -1.208864 -0.794958
# # 7  1.147472 -0.419628 -0.756718 -0.727194
# # 8 -0.727263 -0.392680  1.709520  1.223596
# # 9 -0.832054 -0.982381 -0.216977 -1.135608

# dates = pd.date_range('20130101', periods=6)
#
# data1 = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [11, 12, 13, 10], [11, 12, 3, 4], [11, 12, 13, 10]]
# df1 = pd.DataFrame(data1, index=dates, columns=list('ABCD'))
#
# data2 = [[1, 2, 3], [5, 6, 7], [9, 10, 11], [11, 12, 13], [11, 12, 3]]
# df2 = pd.DataFrame(data2, index=dates[:5], columns=list('ABC'))
#
# # 그냥 합친다. defalut값으로 axis=0이 적용되기 때문에 행방향(위아래)으로 데이터프레임을 이어붙인다
# print(pd.concat([df1, df2]))
# #              A   B   C     D
# # 2013-01-01   1   2   3   4.0
# # 2013-01-02   5   6   7   8.0
# # 2013-01-03   9  10  11  12.0
# # 2013-01-04  11  12  13  10.0
# # 2013-01-05  11  12   3   4.0
# # 2013-01-06  11  12  13  10.0
# # 2013-01-01   1   2   3   NaN
# # 2013-01-02   5   6   7   NaN
# # 2013-01-03   9  10  11   NaN
# # 2013-01-04  11  12  13   NaN
# # 2013-01-05  11  12   3   NaN
#
# # ignore_index = True을 줘서 인덱스를 재배열
# print(pd.concat([df1, df2], ignore_index=True))
# #      A   B   C     D
# # 0    1   2   3   4.0
# # 1    5   6   7   8.0
# # 2    9  10  11  12.0
# # 3   11  12  13  10.0
# # 4   11  12   3   4.0
# # 5   11  12  13  10.0
# # 6    1   2   3   NaN
# # 7    5   6   7   NaN
# # 8    9  10  11   NaN
# # 9   11  12  13   NaN
# # 10  11  12   3   NaN
#
# # 열방향axis=1(좌우)으로 이어붙여보자
# print(pd.concat([df1, df2], axis=1))
# #              A   B   C   D     A     B     C
# # 2013-01-01   1   2   3   4   1.0   2.0   3.0
# # 2013-01-02   5   6   7   8   5.0   6.0   7.0
# # 2013-01-03   9  10  11  12   9.0  10.0  11.0
# # 2013-01-04  11  12  13  10  11.0  12.0  13.0
# # 2013-01-05  11  12   3   4  11.0  12.0   3.0
# # 2013-01-06  11  12  13  10   NaN   NaN   NaN
#
# # default로 outer를 가진다.
# # 이어붙이는 방식을 outer는 합집합, inner는 교집합을 의미한다.
# # 그러면 이번에는 inner옵션을 줘서 이어붙일 두 데이터에 모두 존재하는 행인덱스만 가져와보자.
# print(pd.concat([df1, df2], axis=1, join='inner'))  # NaN은 빠짐
# #              A   B   C   D   A   B   C
# # 2013-01-01   1   2   3   4   1   2   3
# # 2013-01-02   5   6   7   8   5   6   7
# # 2013-01-03   9  10  11  12   9  10  11
# # 2013-01-04  11  12  13  10  11  12  13
# # 2013-01-05  11  12   3   4  11  12   3
#
# # 다른 형태의 자료들을 한 컬럼을 기준으로 합치는 merge
# # left = pd.DataFrame({'key':['foo', 'foo'], 'lval':[1, 2]})
# # right = pd.DataFrame({'key':['foo', 'foo'], 'lval':[4, 5]})
# # print(pd.merge(left, right, on='key'))
# # #    key  lval_x  lval_y
# # # 0  foo       1       4
# # # 1  foo       1       5
# # # 2  foo       2       4
# # # 3  foo       2       5
#
# print(pd.merge([df1, df2], how='right'))


# 기존 데이터 프레임에 하나의 행을 추가하는 append

